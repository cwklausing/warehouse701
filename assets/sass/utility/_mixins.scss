// Breakpoints
$brkpts: (
  "xs": 480px,
  "sm": 640px,
  "md": 800px,
  "lg": 960px,
  "xl": 1020px,
  "xxl": 1180px
);

/*
 * Breakpoints mixin. Makes media queries easier.
 */
@mixin bp( $point, $type: min, $media: screen ) {
  // Look in the keys first
  @if map-has-key( $brkpts, $point ) {
    @if $type == max {
      @media only #{$media} and (max-width: #{inspect( map-get( $brkpts, $point ) )}) {
        @content;
      }
    } @else if $type == min {
      @media only #{$media} and (min-width: #{inspect( map-get( $brkpts, $point ) )}) {
        @content;
      }
    }
  }
  // Fallback to a 'manual' breakpoint.
  // Check to make sure that it is a number and has a unit (px, em).
  @else if type-of( $point ) == number and not unitless( $point ) {
    @if $type == max {
      @media only #{$media} and (max-width: #{$point}) {
        @content;
      }
    } @else if $type == min {
      @media only #{$media} and (min-width: #{$point}) {
        @content;
      }
    }
  }
  // The point wasn't in the $brkpts variable and isn't a valid unit.
  @else {
    @error "`#{$point}` is not a valid breakpoint.";
  }
}

/**
 * @source https://github.com/thoughtbot/bourbon/blob/v4-stable/app/assets/stylesheets/functions/_px-to-rem.scss
 * @param  {Number} $pxval Value in pixels to convert
 * @return {String} The converted value in rems.
 */
@function rem( $pxval ) {
  $base: 16px;
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem;
}
